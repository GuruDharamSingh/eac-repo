upstream php-handler {
    server nextcloud:9000;
}

server {
    listen 80;
    server_name localhost;

    # Path to Nextcloud root
    root /var/www/html;

    # Max upload size
    client_max_body_size 10G;
    fastcgi_buffers 64 4K;

    # Enable gzip
    gzip on;
    gzip_vary on;
    gzip_comp_level 4;
    gzip_min_length 256;
    gzip_types application/javascript application/json text/css text/plain text/xml;

    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;
    add_header X-Download-Options noopen;
    add_header X-Permitted-Cross-Domain-Policies none;
    add_header Referrer-Policy no-referrer;
    add_header X-Frame-Options "SAMEORIGIN";

    # Remove X-Powered-By
    fastcgi_hide_header X-Powered-By;

    # Root files
    index index.php index.html;

    # Redirects
    location = / {
        if ( $http_user_agent ~ ^DavClnt ) {
            return 302 /remote.php/webdav/$is_args$args;
        }
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Nextcloud specific
    location ~ ^\/(?:build|tests|config|lib|3rdparty|templates|data)\/ {
        deny all;
    }
    location ~ ^\/(?:\.|autotest|occ|issue|indie|db_|console) {
        deny all;
    }

    # Pass PHP to FPM
    location ~ ^\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+)\.php(?:$|\/) {
        fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;
        set $path_info $fastcgi_path_info;
        try_files $fastcgi_script_name =404;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param HTTPS off;
        fastcgi_param modHeadersAvailable true;
        fastcgi_param front_controller_active true;
        fastcgi_pass php-handler;
        fastcgi_intercept_errors on;
        fastcgi_request_buffering off;
    }

    # Static files
    location ~ ^\/(?:updater|oc[ms]-provider)(?:$|\/) {
        try_files $uri/ =404;
        index index.php;
    }

    # Ensure custom_apps static files are served
    location ~ ^/custom_apps/(.+\.(css|js|mjs|svg|png|jpg|gif|ico|woff2?))$ {
        try_files $uri =404;
        add_header Cache-Control "public, max-age=15778463";
    }

    # CSS and JS
    location ~ \.(?:css|js|mjs|woff2?|svg|gif|map)$ {
        try_files $uri /index.php$request_uri;
        add_header Cache-Control "public, max-age=15778463";
        access_log off;
        
        # Set correct MIME type for .mjs files
        if ($uri ~* \.mjs$) {
            add_header Content-Type "text/javascript";
        }
    }

    location ~ \.(?:png|html|ttf|ico|jpg|jpeg|bcmap)$ {
        try_files $uri /index.php$request_uri;
        access_log off;
    }

    # App routes (but not static files)
    location ~ ^/(apps|custom_apps)/([^/]+)/?$ {
        try_files $uri /index.php$request_uri;
    }

    # Default
    location / {
        try_files $uri $uri/ /index.php$request_uri;
    }
}