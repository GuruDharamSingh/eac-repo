version: '3.8'

services:
  # PostgreSQL - Single database for all apps
  postgres:
    image: postgres:16-alpine
    container_name: eac-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-elkdonis_dev}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eac-network

  # Supabase Auth Service
  supabase-auth:
    image: supabase/gotrue:v2.151.0
    container_name: eac-supabase-auth
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: ${SUPABASE_URL:-http://localhost:9999}
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-elkdonis_dev}?search_path=auth
      GOTRUE_SITE_URL: ${SITE_URL:-http://localhost:3001}
      GOTRUE_URI_ALLOW_LIST: ${ADDITIONAL_REDIRECT_URLS:-http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003,http://localhost:3004,http://192.168.2.26:3000,http://192.168.2.26:3001,http://192.168.2.26:3002,http://192.168.2.26:3003,http://192.168.2.26:3004}
      GOTRUE_DISABLE_SIGNUP: ${DISABLE_SIGNUP:-false}
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_JWT_EXP: ${JWT_EXPIRY:-3600}
      GOTRUE_JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters}
      GOTRUE_EXTERNAL_EMAIL_ENABLED: ${ENABLE_EMAIL_SIGNUP:-true}
      GOTRUE_MAILER_AUTOCONFIRM: true
      GOTRUE_EXTERNAL_EMAIL_CLIENT: ${EMAIL_CLIENT:-smtp}
      GOTRUE_SMTP_HOST: ${SMTP_HOST}
      GOTRUE_SMTP_PORT: ${SMTP_PORT:-587}
      GOTRUE_SMTP_USER: ${SMTP_USER}
      GOTRUE_SMTP_PASS: ${SMTP_PASS}
      GOTRUE_SMTP_ADMIN_EMAIL: ${SMTP_ADMIN_EMAIL:-admin@example.com}
    ports:
      - "9999:9999"
    networks:
      - eac-network

  # Supabase PostgREST (REST API for database)
  supabase-rest:
    image: postgrest/postgrest:v12.0.2
    container_name: eac-supabase-rest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-elkdonis_dev}
      PGRST_DB_SCHEMAS: public,storage
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters}
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters}
      PGRST_APP_SETTINGS_JWT_EXP: ${JWT_EXPIRY:-3600}
    ports:
      - "9998:3000"
    networks:
      - eac-network

  # Supabase Realtime (for live updates)
  supabase-realtime:
    image: supabase/realtime:v2.29.15
    container_name: eac-supabase-realtime
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PORT: 4000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-elkdonis_dev}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DB_SSL: "false"
      SECRET_KEY_BASE: ${REALTIME_SECRET:-your-super-secret-realtime-key-with-at-least-64-characters}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters}
      REPLICATION_MODE: RLS
      REPLICATION_POLL_INTERVAL: 100
      SECURE_CHANNELS: "true"
    ports:
      - "4000:4000"
    networks:
      - eac-network

  # Redis for caching (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: eac-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eac-network

  # Admin Dashboard App
  admin:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: eac-admin
    depends_on:
      postgres:
        condition: service_healthy
      supabase-auth:
        condition: service_started
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-elkdonis_dev}

      # Supabase Auth
      NEXT_PUBLIC_SUPABASE_URL: ${SUPABASE_URL:-http://localhost:9999}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxvY2FsIiwicm9sZSI6ImFub24iLCJpYXQiOjE2MDMxMTI5NDksImV4cCI6MTkxODY4ODk0OX0.vCiIxe5m9r7dLh3fh8MkV0b_3NwGZHZB2bXrGEaJhs8}
      SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxvY2FsIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTYwMzExMjk0OSwiZXhwIjoxOTE4Njg4OTQ5fQ.5bE4BQPT5-x5dNGmqQ-YBfAlvYvDJJNMXY-Wqj3FrE0}

      # Redis
      REDIS_URL: redis://redis:6379

      # Nextcloud (external stack via shared network)
      NEXTCLOUD_URL: http://nextcloud-nginx:80

      # Node environment
      NODE_ENV: development
      PORT: 3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    command: sh -c "cd apps/admin && pnpm dev"
    networks:
      - eac-network
      - nextcloud-network

  # Forum App (Activity Feed)
  forum:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: eac-forum
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-elkdonis_dev}
      NEXT_PUBLIC_APP_URL: http://localhost:3003
      NODE_ENV: development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/forum/.next
    ports:
      - "3003:3003"
    command: sh -c "cd apps/forum && pnpm dev"
    networks:
      - eac-network
      - nextcloud-network

  # Sunjay's Blog
  blog-sunjay:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: eac-blog-sunjay
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-elkdonis_dev}
      NEXT_PUBLIC_APP_URL: http://localhost:3001
      NODE_ENV: development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/blog-sunjay/.next
    ports:
      - "3001:3001"
    command: sh -c "cd apps/blog-sunjay && pnpm dev"
    networks:
      - eac-network
      - nextcloud-network

  # Guru Dharam's Blog
  blog-guru-dharam:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: eac-blog-guru-dharam
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-elkdonis_dev}
      NEXT_PUBLIC_APP_URL: http://localhost:3002
      NODE_ENV: development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/blog-guru-dharam/.next
    ports:
      - "3002:3002"
    command: sh -c "cd apps/blog-guru-dharam && pnpm dev"
    networks:
      - eac-network
      - nextcloud-network

volumes:
  postgres_data:
  redis_data:

networks:
  eac-network:
    driver: bridge
  nextcloud-network:
    external: true